{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAuBjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUJ,IAEpBU,EAAO,C,SAAEN,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAIb,SAASY,GAAYR,SAAEA,EAAQJ,MAAEA,IAC/Ba,EAAAnB,GAASoB,OAAOC,QAAQ,sBAAoBX,QAAiBJ,M,CAG/D,SAASgB,GAAcZ,SAAEA,EAAQJ,MAAEA,IACjCa,EAAAnB,GAASoB,OAAOG,QAAQ,uBAAqBb,QAAeJ,M,CAtC9DJ,EAAKC,KAAKqB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMlB,EAASN,EAAKM,OAAOmB,MACrBC,EAAQ1B,EAAKI,MAAMqB,MACnBpB,EAAOL,EAAKK,KAAKoB,MACvB,IAAK,IAAIE,EAAI,EAAGA,EAAIrB,EAAQqB,GAAK,EAAG,CAClC,MAAMC,EAAWC,OAAOF,GAAK,EACvBG,EAAeD,OAAOH,GAASrB,EAAO,CAACsB,GAC7CpB,EAAcqB,EAAUE,GACrBC,MAAK,EAACvB,SAAEA,EAAQJ,MAAEA,MACjBgB,EAAc,C,SAAEZ,E,MAAUJ,GAAQ,IAEnC4B,OAAM,EAACxB,SAAEA,EAAQJ,MAAEA,MAClBY,EAAY,C,SAAER,E,MAAUJ,GAAQ,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const amount = refs.amount.value;\n  const delay = refs.delay.value;\n  const step = refs.step.value;\n  for (let i = 0; i < amount; i += 1) {\n    const position = Number(i) + 1;\n    const currentDelay = Number(delay) + step * [i];\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        notifySuccess({ position, delay });\n      })\n      .catch(({ position, delay }) => {\n        notifyError({ position, delay });\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction notifyError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction notifySuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$notifyError","$parcel$interopDefault","Notify","failure","$47d4ff9957288465$var$notifySuccess","success","addEventListener","e","preventDefault","value","delay1","i","position1","Number","currentDelay","then","catch"],"version":3,"file":"03-promises.9b16d530.js.map"}