{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,SAAUF,SAASC,cAAc,uBACjCE,QAASH,SAASC,cAAc,sBAChCG,UAAWJ,SAASC,cAAc,yBAwBpC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,GAAYT,SAAEA,EAAQC,MAAEA,IAC/BS,EAAApB,GAASqB,OAAOC,QAAQ,sBAAoBZ,QAAiBC,M,CAG/D,SAASY,GAAcb,SAAEA,EAAQC,MAAEA,IACjCS,EAAApB,GAASqB,OAAOG,QAAQ,uBAAqBd,QAAeC,M,CAvC9DT,EAAKC,QAAQsB,iBAAiB,UAE9B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAS1B,EAAKM,UAAUqB,MACxBC,EAAQ5B,EAAKI,SAASuB,MACtBE,EAAO7B,EAAKK,QAAQsB,MAC1B,IAAK,IAAIG,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAAG,CACnC,MAAMC,EAAW,CAACD,GACZE,EAAeC,OAAOL,GAASC,EAAO,CAACC,GAC7CI,QAAQC,IAAI,eAAgBH,GAC5BzB,EAAcwB,EAAUC,GACrBI,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjBY,EAAc,C,SAAEb,E,MAAUC,GAAQ,IAEnC4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBQ,EAAY,C,SAAET,E,MAAUC,GAAQ,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formRef: document.querySelector('.form'),\n  delayRef: document.querySelector('input[name=\"delay\"]'),\n  stepRef: document.querySelector('input[name=\"step\"]'),\n  amountRef: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const amount = refs.amountRef.value;\n  const delay = refs.delayRef.value;\n  const step = refs.stepRef.value;\n  for (let i = 1; i <= amount; i += 1) {\n    const position = [i];\n    const currentDelay = Number(delay) + step * [i];\n    console.log('currentDelay', currentDelay);\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        notifySuccess({ position, delay });\n      })\n      .catch(({ position, delay }) => {\n        notifyError({ position, delay });\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction notifyError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction notifySuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\n//\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","formRef","document","querySelector","delayRef","stepRef","amountRef","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$notifyError","$parcel$interopDefault","Notify","failure","$47d4ff9957288465$var$notifySuccess","success","addEventListener","e","preventDefault","amount","value","delay1","step","i","position1","currentDelay","Number","console","log","then","catch"],"version":3,"file":"03-promises.49e1ca5e.js.map"}