{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,SAAUF,SAASC,cAAc,uBACjCE,QAASH,SAASC,cAAc,sBAChCG,UAAWJ,SAASC,cAAc,yBAwBpC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAYC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC/BU,EAAArB,GAASsB,OAAOC,QAAQ,sBAAuCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAGvE,SAASc,EAAcL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACjCU,EAAArB,GAASsB,OAAOI,QAAQ,uBAAsCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAvCtET,EAAKC,QAAQwB,iBAAiB,UAE9B,SAAsBC,GACpBA,EAAEC,iBAIF,IAHA,IAAMC,EAAS5B,EAAKM,UAAUuB,MACxBC,EAAQ9B,EAAKI,SAASyB,MACtBE,EAAO/B,EAAKK,QAAQwB,MACjBG,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAAG,CACnC,IAAMC,EAAW,CAACD,GACZE,EAAeC,OAAOL,GAASC,EAAO,CAACC,GAC7CI,QAAQC,IAAI,eAAgBH,GAC5B3B,EAAc0B,EAAUC,GACrBI,MAAK,SAAApB,GACJK,EAAc,CAAEf,SADDU,EAARV,SACmBC,MADJS,EAALT,O,IAGlB8B,OAAM,SAAArB,GACLD,EAAY,CAAET,SADEU,EAARV,SACgBC,MADDS,EAALT,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formRef: document.querySelector('.form'),\n  delayRef: document.querySelector('input[name=\"delay\"]'),\n  stepRef: document.querySelector('input[name=\"step\"]'),\n  amountRef: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const amount = refs.amountRef.value;\n  const delay = refs.delayRef.value;\n  const step = refs.stepRef.value;\n  for (let i = 1; i <= amount; i += 1) {\n    const position = [i];\n    const currentDelay = Number(delay) + step * [i];\n    console.log('currentDelay', currentDelay);\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        notifySuccess({ position, delay });\n      })\n      .catch(({ position, delay }) => {\n        notifyError({ position, delay });\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction notifyError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction notifySuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\n//\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formRef","document","querySelector","delayRef","stepRef","amountRef","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$notifyError","param","$parcel$interopDefault","Notify","failure","concat","$ce04d3a99e08e73b$var$notifySuccess","success","addEventListener","e","preventDefault","amount","value","delay1","step","i","position1","currentDelay","Number","console","log","then","catch"],"version":3,"file":"03-promises.cf775ba0.js.map"}